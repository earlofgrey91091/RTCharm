mainmodule main {

    readonly CProxy_Main mainProxy;

    extern module pixelchare;
    mainchare Main 
    {
        entry Main(CkArgMsg *m);
        entry void done();
        entry void run()
        {
            for(count = 0; count < chareDimension*chareDimension; count++) 
            {
                when done()
                atomic 
                {
                    //force sync
                }
            }
            atomic  
            {
                iterations++;
                CkPrintf("Start iteration %d\n", iterations);
                if(iterations < ITERATIONS)
                {
                    if(iterations%ROT_TIME == 0) {
                        rotateLights();
                        pixel.runStep(sendShape, myLights);
                    }
                    else {
                        pixel.run();
                    }
                }
                else CkExit();
                mainProxy.run();
            }    
        };
    };
};
